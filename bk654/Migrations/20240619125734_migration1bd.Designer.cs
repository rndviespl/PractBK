// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bk654.Data;

#nullable disable

namespace bk654.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240619125734_migration1bd")]
    partial class migration1bd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("bk654.Models.DeletedWorker", b =>
                {
                    b.Property<DateTime?>("DeletedTimestamp")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_timestamp");

                    b.Property<string>("DismissalReason")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dismissal_reason")
                        .UseCollation("utf8_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("DismissalReason"), "utf8");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name")
                        .UseCollation("utf8_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Name"), "utf8");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("patronymic")
                        .UseCollation("utf8_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Patronymic"), "utf8");

                    b.Property<int>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("position_id");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int")
                        .HasColumnName("restaurant_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("surname")
                        .UseCollation("utf8_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Surname"), "utf8");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("worker_id");

                    b.HasIndex(new[] { "PositionId" }, "fk_deleted_workers_position_at_work1_idx");

                    b.HasIndex(new[] { "RestaurantId" }, "fk_deleted_workers_restaurant1_idx");

                    b.HasIndex(new[] { "WorkerId" }, "fk_deleted_workers_worker1_idx");

                    b.ToTable("deleted_workers", (string)null);
                });

            modelBuilder.Entity("bk654.Models.PerformanceReview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("comments");

                    b.Property<int>("PerformanceRating")
                        .HasColumnType("int")
                        .HasColumnName("performance_rating");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime")
                        .HasColumnName("review_date");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("reviewer_name");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("worker_id");

                    b.HasKey("ReviewId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "WorkerId" }, "fk_performance_reviews_worker1_idx");

                    b.ToTable("performance_reviews", (string)null);
                });

            modelBuilder.Entity("bk654.Models.PerformanceReviewSummary", b =>
                {
                    b.Property<decimal?>("AvgRating")
                        .HasPrecision(14, 4)
                        .HasColumnType("decimal(14,4)")
                        .HasColumnName("avg_rating");

                    b.Property<int?>("MaxRating")
                        .HasColumnType("int")
                        .HasColumnName("max_rating");

                    b.Property<int?>("MinRating")
                        .HasColumnType("int")
                        .HasColumnName("min_rating");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("worker_id");

                    b.ToTable((string)null);

                    b.ToView("performance_review_summary", (string)null);
                });

            modelBuilder.Entity("bk654.Models.PositionAtWork", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("name")
                        .UseCollation("utf8_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Name"), "utf8");

                    b.Property<decimal>("SalaryPerHour")
                        .HasPrecision(3)
                        .HasColumnType("decimal(3)")
                        .HasColumnName("salary_per_hour");

                    b.HasKey("PositionId")
                        .HasName("PRIMARY");

                    b.ToTable("position_at_work", (string)null);
                });

            modelBuilder.Entity("bk654.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("restaurant_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RestaurantId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address");

                    b.Property<int?>("EmployeesCount")
                        .HasColumnType("int")
                        .HasColumnName("employees_count");

                    b.Property<string>("Mall")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mall");

                    b.Property<string>("RestaurantCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("restaurant_code");

                    b.Property<string>("Town")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("town");

                    b.HasKey("RestaurantId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RestaurantId" }, "worker_id");

                    b.ToTable("restaurant", (string)null);
                });

            modelBuilder.Entity("bk654.Models.WorkShift", b =>
                {
                    b.Property<int>("WorkShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("work_shift_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WorkShiftId"));

                    b.Property<string>("DescriptionManualEntry")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("description_manual_entry");

                    b.Property<DateTime>("EndShift")
                        .HasColumnType("datetime")
                        .HasColumnName("end_shift");

                    b.Property<DateTime>("StartShift")
                        .HasColumnType("datetime")
                        .HasColumnName("start_shift");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("worker_id");

                    b.HasKey("WorkShiftId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "WorkerId" }, "fk_work_shift_worker_idx");

                    b.ToTable("work_shift", (string)null);
                });

            modelBuilder.Entity("bk654.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("worker_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WorkerId"));

                    b.Property<string>("DismissalReason")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dismissal_reason")
                        .UseCollation("utf8_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("DismissalReason"), "utf8");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name")
                        .UseCollation("utf8_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Name"), "utf8");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("patronymic")
                        .UseCollation("utf8_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Patronymic"), "utf8");

                    b.Property<int>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("position_id");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int")
                        .HasColumnName("restaurant_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("surname")
                        .UseCollation("utf8_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Surname"), "utf8");

                    b.HasKey("WorkerId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PositionId" }, "fk_worker_position_at_work1_idx");

                    b.HasIndex(new[] { "RestaurantId" }, "fk_worker_restaurant1_idx");

                    b.HasIndex(new[] { "WorkerId" }, "idx_worker_id");

                    b.ToTable("worker", (string)null);
                });

            modelBuilder.Entity("bk654.Models.DeletedWorker", b =>
                {
                    b.HasOne("bk654.Models.PositionAtWork", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .IsRequired()
                        .HasConstraintName("fk_deleted_workers_position_at_work1");

                    b.HasOne("bk654.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("fk_deleted_workers_restaurant1");

                    b.HasOne("bk654.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .IsRequired()
                        .HasConstraintName("fk_deleted_workers_worker1");

                    b.Navigation("Position");

                    b.Navigation("Restaurant");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("bk654.Models.PerformanceReview", b =>
                {
                    b.HasOne("bk654.Models.Worker", "Worker")
                        .WithMany("PerformanceReviews")
                        .HasForeignKey("WorkerId")
                        .IsRequired()
                        .HasConstraintName("fk_performance_reviews_worker1");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("bk654.Models.WorkShift", b =>
                {
                    b.HasOne("bk654.Models.Worker", "Worker")
                        .WithMany("WorkShifts")
                        .HasForeignKey("WorkerId")
                        .IsRequired()
                        .HasConstraintName("fk_work_shift_worker");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("bk654.Models.Worker", b =>
                {
                    b.HasOne("bk654.Models.PositionAtWork", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .IsRequired()
                        .HasConstraintName("fk_worker_position_at_work1");

                    b.HasOne("bk654.Models.Restaurant", "Restaurant")
                        .WithMany("Workers")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("fk_worker_restaurant1");

                    b.Navigation("Position");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("bk654.Models.PositionAtWork", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("bk654.Models.Restaurant", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("bk654.Models.Worker", b =>
                {
                    b.Navigation("PerformanceReviews");

                    b.Navigation("WorkShifts");
                });
#pragma warning restore 612, 618
        }
    }
}
